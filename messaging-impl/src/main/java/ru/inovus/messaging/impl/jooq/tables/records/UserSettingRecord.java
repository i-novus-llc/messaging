/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.inovus.messaging.api.model.enums.AlertType;
import ru.inovus.messaging.impl.jooq.tables.UserSetting;


/**
 * Пользовательские настройки уведомлений
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSettingRecord extends UpdatableRecordImpl<UserSettingRecord> implements Record7<Integer, AlertType, Boolean, String, Integer, Integer, String> {

    private static final long serialVersionUID = 102060533;

    /**
     * Setter for <code>messaging.user_setting.id</code>. Уникальный идентификатор
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>messaging.user_setting.id</code>. Уникальный идентификатор
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>messaging.user_setting.alert_type</code>. Способ отображения уведомления
     */
    public void setAlertType(AlertType value) {
        set(1, value);
    }

    /**
     * Getter for <code>messaging.user_setting.alert_type</code>. Способ отображения уведомления
     */
    public AlertType getAlertType() {
        return (AlertType) get(1);
    }

    /**
     * Setter for <code>messaging.user_setting.is_disabled</code>. Признак выключения уведомления
     */
    public void setIsDisabled(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>messaging.user_setting.is_disabled</code>. Признак выключения уведомления
     */
    public Boolean getIsDisabled() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>messaging.user_setting.user_id</code>. Идентификатор пользователя, к которому относится настройка
     */
    public void setUserId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>messaging.user_setting.user_id</code>. Идентификатор пользователя, к которому относится настройка
     */
    public String getUserId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>messaging.user_setting.msg_setting_id</code>. Идентификатор шаблона уведомления
     */
    public void setMsgSettingId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>messaging.user_setting.msg_setting_id</code>. Идентификатор шаблона уведомления
     */
    public Integer getMsgSettingId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>messaging.user_setting.channel_id</code>. Идентификатор канала отправки уведомления
     */
    public void setChannelId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>messaging.user_setting.channel_id</code>. Идентификатор канала отправки уведомления
     */
    public Integer getChannelId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>messaging.user_setting.tenant_code</code>. Тенант, к которому относится пользовательская настройка
     */
    public void setTenantCode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>messaging.user_setting.tenant_code</code>. Тенант, к которому относится пользовательская настройка
     */
    public String getTenantCode() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, AlertType, Boolean, String, Integer, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, AlertType, Boolean, String, Integer, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserSetting.USER_SETTING.ID;
    }

    @Override
    public Field<AlertType> field2() {
        return UserSetting.USER_SETTING.ALERT_TYPE;
    }

    @Override
    public Field<Boolean> field3() {
        return UserSetting.USER_SETTING.IS_DISABLED;
    }

    @Override
    public Field<String> field4() {
        return UserSetting.USER_SETTING.USER_ID;
    }

    @Override
    public Field<Integer> field5() {
        return UserSetting.USER_SETTING.MSG_SETTING_ID;
    }

    @Override
    public Field<Integer> field6() {
        return UserSetting.USER_SETTING.CHANNEL_ID;
    }

    @Override
    public Field<String> field7() {
        return UserSetting.USER_SETTING.TENANT_CODE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public AlertType component2() {
        return getAlertType();
    }

    @Override
    public Boolean component3() {
        return getIsDisabled();
    }

    @Override
    public String component4() {
        return getUserId();
    }

    @Override
    public Integer component5() {
        return getMsgSettingId();
    }

    @Override
    public Integer component6() {
        return getChannelId();
    }

    @Override
    public String component7() {
        return getTenantCode();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public AlertType value2() {
        return getAlertType();
    }

    @Override
    public Boolean value3() {
        return getIsDisabled();
    }

    @Override
    public String value4() {
        return getUserId();
    }

    @Override
    public Integer value5() {
        return getMsgSettingId();
    }

    @Override
    public Integer value6() {
        return getChannelId();
    }

    @Override
    public String value7() {
        return getTenantCode();
    }

    @Override
    public UserSettingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserSettingRecord value2(AlertType value) {
        setAlertType(value);
        return this;
    }

    @Override
    public UserSettingRecord value3(Boolean value) {
        setIsDisabled(value);
        return this;
    }

    @Override
    public UserSettingRecord value4(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserSettingRecord value5(Integer value) {
        setMsgSettingId(value);
        return this;
    }

    @Override
    public UserSettingRecord value6(Integer value) {
        setChannelId(value);
        return this;
    }

    @Override
    public UserSettingRecord value7(String value) {
        setTenantCode(value);
        return this;
    }

    @Override
    public UserSettingRecord values(Integer value1, AlertType value2, Boolean value3, String value4, Integer value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSettingRecord
     */
    public UserSettingRecord() {
        super(UserSetting.USER_SETTING);
    }

    /**
     * Create a detached, initialised UserSettingRecord
     */
    public UserSettingRecord(Integer id, AlertType alertType, Boolean isDisabled, String userId, Integer msgSettingId, Integer channelId, String tenantCode) {
        super(UserSetting.USER_SETTING);

        set(0, id);
        set(1, alertType);
        set(2, isDisabled);
        set(3, userId);
        set(4, msgSettingId);
        set(5, channelId);
        set(6, tenantCode);
    }
}
