/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq;


import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import ru.inovus.messaging.impl.jooq.tables.*;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Messaging extends SchemaImpl {

    private static final long serialVersionUID = 1005769240;

    /**
     * The reference instance of <code>messaging</code>
     */
    public static final Messaging MESSAGING = new Messaging();

    /**
     * Вложения
     */
    public final Attachment ATTACHMENT = Attachment.ATTACHMENT;

    /**
     * Каналы отправки уведомлений
     */
    public final Channel CHANNEL = Channel.CHANNEL;

    /**
     * Уведомления
     */
    public final Message MESSAGE = Message.MESSAGE;

    /**
     * Получатель уведомления
     */
    public final MessageRecipient MESSAGE_RECIPIENT = MessageRecipient.MESSAGE_RECIPIENT;

    /**
     * Шаблоны уведомлений
     */
    public final MessageTemplate MESSAGE_TEMPLATE = MessageTemplate.MESSAGE_TEMPLATE;

    /**
     * Тенанты
     */
    public final Tenant TENANT = Tenant.TENANT;

    /**
     * No further instances allowed
     */
    private Messaging() {
        super("messaging", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.<Sequence<?>>asList(
            Sequences.MESSAGE_ID_SEQ,
            Sequences.MESSAGE_RECIPIENT_ID_SEQ,
            Sequences.MESSAGE_TEMPLATE_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            Attachment.ATTACHMENT,
            Channel.CHANNEL,
            Message.MESSAGE,
            MessageRecipient.MESSAGE_RECIPIENT,
            MessageTemplate.MESSAGE_TEMPLATE,
            Tenant.TENANT);
    }
}
