/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import ru.inovus.messaging.impl.jooq.tables.Recipient;

import java.time.LocalDateTime;
import java.util.UUID;


/**
 * Получатели сообщения
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RecipientRecord extends UpdatableRecordImpl<RecipientRecord> implements Record5<Integer, String, UUID, LocalDateTime, String> {

    private static final long serialVersionUID = -773044418;

    /**
     * Setter for <code>public.recipient.id</code>. Уникальный идентификатор
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.recipient.id</code>. Уникальный идентификатор
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.recipient.recipient</code>. Получатель
     */
    public void setRecipient(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.recipient.recipient</code>. Получатель
     */
    public String getRecipient() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.recipient.message_id</code>. Ссылка на сообщение
     */
    public void setMessageId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.recipient.message_id</code>. Ссылка на сообщение
     */
    public UUID getMessageId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.recipient.read_at</code>. Помечено прочтенным (дата и время)
     */
    public void setReadAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.recipient.read_at</code>. Помечено прочтенным (дата и время)
     */
    public LocalDateTime getReadAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.recipient.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.recipient.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, UUID, LocalDateTime, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, UUID, LocalDateTime, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Recipient.RECIPIENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Recipient.RECIPIENT.RECIPIENT_;
    }

    @Override
    public Field<UUID> field3() {
        return Recipient.RECIPIENT.MESSAGE_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Recipient.RECIPIENT.READ_AT;
    }

    @Override
    public Field<String> field5() {
        return Recipient.RECIPIENT.EMAIL;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRecipient();
    }

    @Override
    public UUID component3() {
        return getMessageId();
    }

    @Override
    public LocalDateTime component4() {
        return getReadAt();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRecipient();
    }

    @Override
    public UUID value3() {
        return getMessageId();
    }

    @Override
    public LocalDateTime value4() {
        return getReadAt();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public RecipientRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RecipientRecord value2(String value) {
        setRecipient(value);
        return this;
    }

    @Override
    public RecipientRecord value3(UUID value) {
        setMessageId(value);
        return this;
    }

    @Override
    public RecipientRecord value4(LocalDateTime value) {
        setReadAt(value);
        return this;
    }

    @Override
    public RecipientRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public RecipientRecord values(Integer value1, String value2, UUID value3, LocalDateTime value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RecipientRecord
     */
    public RecipientRecord() {
        super(Recipient.RECIPIENT);
    }

    /**
     * Create a detached, initialised RecipientRecord
     */
    public RecipientRecord(Integer id, String recipient, UUID messageId, LocalDateTime readAt, String email) {
        super(Recipient.RECIPIENT);

        set(0, id);
        set(1, recipient);
        set(2, messageId);
        set(3, readAt);
        set(4, email);
    }
}
