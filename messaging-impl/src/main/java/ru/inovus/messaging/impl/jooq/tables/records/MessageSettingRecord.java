/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import ru.inovus.messaging.api.model.AlertType;
import ru.inovus.messaging.api.model.FormationType;
import ru.inovus.messaging.api.model.InfoType;
import ru.inovus.messaging.api.model.Severity;
import ru.inovus.messaging.impl.jooq.tables.MessageSetting;

import javax.annotation.Generated;


/**
 * Шаблоны уведомлений (общесистемные настройки)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageSettingRecord extends UpdatableRecordImpl<MessageSettingRecord> implements Record10<Integer, String, String, Severity, AlertType, InfoType, Integer, String, Boolean, FormationType> {

    private static final long serialVersionUID = -1511447654;

    /**
     * Setter for <code>public.message_setting.id</code>. Уникальный идентификатор
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.message_setting.id</code>. Уникальный идентификатор
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.message_setting.caption</code>. Заголовок
     */
    public void setCaption(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.message_setting.caption</code>. Заголовок
     */
    public String getCaption() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.message_setting.text</code>. Содержимое сообщения
     */
    public void setText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.message_setting.text</code>. Содержимое сообщения
     */
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.message_setting.severity</code>. Жесткость сообщения
     */
    public void setSeverity(Severity value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.message_setting.severity</code>. Жесткость сообщения
     */
    public Severity getSeverity() {
        return (Severity) get(3);
    }

    /**
     * Setter for <code>public.message_setting.alert_type</code>. Тип предупреждения
     */
    public void setAlertType(AlertType value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.message_setting.alert_type</code>. Тип предупреждения
     */
    public AlertType getAlertType() {
        return (AlertType) get(4);
    }

    /**
     * Setter for <code>public.message_setting.info_type</code>. Вид информирования по событию (почта, центр уведомления)
     */
    public void setInfoType(InfoType value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.message_setting.info_type</code>. Вид информирования по событию (почта, центр уведомления)
     */
    public InfoType getInfoType() {
        return (InfoType) get(5);
    }

    /**
     * Setter for <code>public.message_setting.component_id</code>. Ссылка на системный справочник компонентов Системы. Системный справочник будет настраиваться для каждой Системы при необходимости
     */
    public void setComponentId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.message_setting.component_id</code>. Ссылка на системный справочник компонентов Системы. Системный справочник будет настраиваться для каждой Системы при необходимости
     */
    public Integer getComponentId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.message_setting.name</code>. Название шаблона (события)
     */
    public void setName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.message_setting.name</code>. Название шаблона (события)
     */
    public String getName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.message_setting.is_disabled</code>. Признак выключения уведомления
     */
    public void setIsDisabled(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.message_setting.is_disabled</code>. Признак выключения уведомления
     */
    public Boolean getIsDisabled() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.message_setting.formation_type</code>. Тип формирования уведомления
     */
    public void setFormationType(FormationType value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.message_setting.formation_type</code>. Тип формирования уведомления
     */
    public FormationType getFormationType() {
        return (FormationType) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, Severity, AlertType, InfoType, Integer, String, Boolean, FormationType> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, String, String, Severity, AlertType, InfoType, Integer, String, Boolean, FormationType> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return MessageSetting.MESSAGE_SETTING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return MessageSetting.MESSAGE_SETTING.CAPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return MessageSetting.MESSAGE_SETTING.TEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Severity> field4() {
        return MessageSetting.MESSAGE_SETTING.SEVERITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<AlertType> field5() {
        return MessageSetting.MESSAGE_SETTING.ALERT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<InfoType> field6() {
        return MessageSetting.MESSAGE_SETTING.INFO_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return MessageSetting.MESSAGE_SETTING.COMPONENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return MessageSetting.MESSAGE_SETTING.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return MessageSetting.MESSAGE_SETTING.IS_DISABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<FormationType> field10() {
        return MessageSetting.MESSAGE_SETTING.FORMATION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getCaption();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Severity component4() {
        return getSeverity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlertType component5() {
        return getAlertType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InfoType component6() {
        return getInfoType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getComponentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIsDisabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationType component10() {
        return getFormationType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getCaption();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Severity value4() {
        return getSeverity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AlertType value5() {
        return getAlertType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InfoType value6() {
        return getInfoType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getComponentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIsDisabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FormationType value10() {
        return getFormationType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value2(String value) {
        setCaption(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value3(String value) {
        setText(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value4(Severity value) {
        setSeverity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value5(AlertType value) {
        setAlertType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value6(InfoType value) {
        setInfoType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value7(Integer value) {
        setComponentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value8(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value9(Boolean value) {
        setIsDisabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord value10(FormationType value) {
        setFormationType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MessageSettingRecord values(Integer value1, String value2, String value3, Severity value4, AlertType value5, InfoType value6, Integer value7, String value8, Boolean value9, FormationType value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageSettingRecord
     */
    public MessageSettingRecord() {
        super(MessageSetting.MESSAGE_SETTING);
    }

    /**
     * Create a detached, initialised MessageSettingRecord
     */
    public MessageSettingRecord(Integer id, String caption, String text, Severity severity, AlertType alertType, InfoType infoType, Integer componentId, String name, Boolean isDisabled, FormationType formationType) {
        super(MessageSetting.MESSAGE_SETTING);

        set(0, id);
        set(1, caption);
        set(2, text);
        set(3, severity);
        set(4, alertType);
        set(5, infoType);
        set(6, componentId);
        set(7, name);
        set(8, isDisabled);
        set(9, formationType);
    }
}
