/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import ru.inovus.messaging.impl.jooq.tables.*;
import ru.inovus.messaging.impl.jooq.tables.records.*;


/**
 * A class modelling foreign key relationships and constraints of tables of
 * the <code>public</code> schema.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserSettingRecord, Integer> IDENTITY_USER_SETTING = Identities0.IDENTITY_USER_SETTING;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ComponentRecord> COMPONENT_PKEY = UniqueKeys0.COMPONENT_PKEY;
    public static final UniqueKey<MessageRecord> MESSAGE_PKEY = UniqueKeys0.MESSAGE_PKEY;
    public static final UniqueKey<MessageSettingRecord> MESSAGE_SETTING_PKEY = UniqueKeys0.MESSAGE_SETTING_PKEY;
    public static final UniqueKey<RecipientRecord> RECIPIENT_PKEY = UniqueKeys0.RECIPIENT_PKEY;
    public static final UniqueKey<UserSettingRecord> USER_SETTING_PKEY = UniqueKeys0.USER_SETTING_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MessageRecord, ComponentRecord> MESSAGE__MESSAGE_COMPONENT_ID_FKEY = ForeignKeys0.MESSAGE__MESSAGE_COMPONENT_ID_FKEY;
    public static final ForeignKey<MessageSettingRecord, ComponentRecord> MESSAGE_SETTING__MESSAGE_SETTING_COMPONENT_ID_FKEY = ForeignKeys0.MESSAGE_SETTING__MESSAGE_SETTING_COMPONENT_ID_FKEY;
    public static final ForeignKey<RecipientRecord, MessageRecord> RECIPIENT__RECIPIENT_MESSAGE_ID_FKEY = ForeignKeys0.RECIPIENT__RECIPIENT_MESSAGE_ID_FKEY;
    public static final ForeignKey<UserSettingRecord, MessageSettingRecord> USER_SETTING__USER_SETTING_MSG_SETTINGS_ID_MESSAGE_SETTING_ID_FK = ForeignKeys0.USER_SETTING__USER_SETTING_MSG_SETTINGS_ID_MESSAGE_SETTING_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<UserSettingRecord, Integer> IDENTITY_USER_SETTING = Internal.createIdentity(UserSetting.USER_SETTING, UserSetting.USER_SETTING.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ComponentRecord> COMPONENT_PKEY = Internal.createUniqueKey(Component.COMPONENT, "component_pkey", new TableField[]{Component.COMPONENT.ID}, true);
        public static final UniqueKey<MessageRecord> MESSAGE_PKEY = Internal.createUniqueKey(Message.MESSAGE, "message_pkey", new TableField[]{Message.MESSAGE.ID}, true);
        public static final UniqueKey<MessageSettingRecord> MESSAGE_SETTING_PKEY = Internal.createUniqueKey(MessageSetting.MESSAGE_SETTING, "message_setting_pkey", new TableField[]{MessageSetting.MESSAGE_SETTING.ID}, true);
        public static final UniqueKey<RecipientRecord> RECIPIENT_PKEY = Internal.createUniqueKey(Recipient.RECIPIENT, "recipient_pkey", new TableField[]{Recipient.RECIPIENT.ID}, true);
        public static final UniqueKey<UserSettingRecord> USER_SETTING_PKEY = Internal.createUniqueKey(UserSetting.USER_SETTING, "user_setting_pkey", new TableField[]{UserSetting.USER_SETTING.ID}, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<MessageRecord, ComponentRecord> MESSAGE__MESSAGE_COMPONENT_ID_FKEY = Internal.createForeignKey(Keys.COMPONENT_PKEY, Message.MESSAGE, "message_component_id_fkey", new TableField[]{Message.MESSAGE.COMPONENT_ID}, true);
        public static final ForeignKey<MessageSettingRecord, ComponentRecord> MESSAGE_SETTING__MESSAGE_SETTING_COMPONENT_ID_FKEY = Internal.createForeignKey(Keys.COMPONENT_PKEY, MessageSetting.MESSAGE_SETTING, "message_setting_component_id_fkey", new TableField[]{MessageSetting.MESSAGE_SETTING.COMPONENT_ID}, true);
        public static final ForeignKey<RecipientRecord, MessageRecord> RECIPIENT__RECIPIENT_MESSAGE_ID_FKEY = Internal.createForeignKey(Keys.MESSAGE_PKEY, Recipient.RECIPIENT, "recipient_message_id_fkey", new TableField[]{Recipient.RECIPIENT.MESSAGE_ID}, true);
        public static final ForeignKey<UserSettingRecord, MessageSettingRecord> USER_SETTING__USER_SETTING_MSG_SETTINGS_ID_MESSAGE_SETTING_ID_FK = Internal.createForeignKey(Keys.MESSAGE_SETTING_PKEY, UserSetting.USER_SETTING, "user_setting_msg_settings_id_message_setting_id_fk", new TableField[]{UserSetting.USER_SETTING.MSG_SETTING_ID}, true);
    }
}
