/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.inovus.messaging.impl.jooq.tables.Channel;
import ru.inovus.messaging.impl.jooq.tables.Message;
import ru.inovus.messaging.impl.jooq.tables.MessageRecipient;
import ru.inovus.messaging.impl.jooq.tables.MessageSetting;
import ru.inovus.messaging.impl.jooq.tables.Tenant;
import ru.inovus.messaging.impl.jooq.tables.UserSetting;
import ru.inovus.messaging.impl.jooq.tables.records.ChannelRecord;
import ru.inovus.messaging.impl.jooq.tables.records.MessageRecipientRecord;
import ru.inovus.messaging.impl.jooq.tables.records.MessageRecord;
import ru.inovus.messaging.impl.jooq.tables.records.MessageSettingRecord;
import ru.inovus.messaging.impl.jooq.tables.records.TenantRecord;
import ru.inovus.messaging.impl.jooq.tables.records.UserSettingRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>messaging</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<UserSettingRecord, Integer> IDENTITY_USER_SETTING = Identities0.IDENTITY_USER_SETTING;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChannelRecord> CHANNEL_PKEY = UniqueKeys0.CHANNEL_PKEY;
    public static final UniqueKey<MessageRecord> MESSAGE_PKEY = UniqueKeys0.MESSAGE_PKEY;
    public static final UniqueKey<MessageRecipientRecord> RECIPIENT_PKEY = UniqueKeys0.RECIPIENT_PKEY;
    public static final UniqueKey<MessageSettingRecord> MESSAGE_SETTING_PKEY = UniqueKeys0.MESSAGE_SETTING_PKEY;
    public static final UniqueKey<TenantRecord> TENANT_PKEY = UniqueKeys0.TENANT_PKEY;
    public static final UniqueKey<UserSettingRecord> USER_SETTING_PKEY = UniqueKeys0.USER_SETTING_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ChannelRecord, TenantRecord> CHANNEL__CHANNEL_TENANT_CODE_FKEY = ForeignKeys0.CHANNEL__CHANNEL_TENANT_CODE_FKEY;
    public static final ForeignKey<MessageRecord, TenantRecord> MESSAGE__MESSAGE_TENANT_CODE_FKEY = ForeignKeys0.MESSAGE__MESSAGE_TENANT_CODE_FKEY;
    public static final ForeignKey<MessageRecord, ChannelRecord> MESSAGE__MESSAGE_CHANNEL_ID_CHANNEL_ID_FK = ForeignKeys0.MESSAGE__MESSAGE_CHANNEL_ID_CHANNEL_ID_FK;
    public static final ForeignKey<MessageRecipientRecord, MessageRecord> MESSAGE_RECIPIENT__RECIPIENT_MESSAGE_ID_FKEY = ForeignKeys0.MESSAGE_RECIPIENT__RECIPIENT_MESSAGE_ID_FKEY;
    public static final ForeignKey<MessageSettingRecord, ChannelRecord> MESSAGE_SETTING__MESSAGE_SETTING_CHANNEL_ID_CHANNEL_ID_FK = ForeignKeys0.MESSAGE_SETTING__MESSAGE_SETTING_CHANNEL_ID_CHANNEL_ID_FK;
    public static final ForeignKey<MessageSettingRecord, TenantRecord> MESSAGE_SETTING__MESSAGE_SETTING_TENANT_CODE_FKEY = ForeignKeys0.MESSAGE_SETTING__MESSAGE_SETTING_TENANT_CODE_FKEY;
    public static final ForeignKey<UserSettingRecord, MessageSettingRecord> USER_SETTING__USER_SETTING_MSG_SETTINGS_ID_MESSAGE_SETTING_ID_FK = ForeignKeys0.USER_SETTING__USER_SETTING_MSG_SETTINGS_ID_MESSAGE_SETTING_ID_FK;
    public static final ForeignKey<UserSettingRecord, ChannelRecord> USER_SETTING__USER_SETTING_CHANNEL_ID_CHANNEL_ID_FK = ForeignKeys0.USER_SETTING__USER_SETTING_CHANNEL_ID_CHANNEL_ID_FK;
    public static final ForeignKey<UserSettingRecord, TenantRecord> USER_SETTING__USER_SETTING_TENANT_CODE_FKEY = ForeignKeys0.USER_SETTING__USER_SETTING_TENANT_CODE_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<UserSettingRecord, Integer> IDENTITY_USER_SETTING = Internal.createIdentity(UserSetting.USER_SETTING, UserSetting.USER_SETTING.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ChannelRecord> CHANNEL_PKEY = Internal.createUniqueKey(Channel.CHANNEL, "channel_pkey", new TableField[] { Channel.CHANNEL.ID }, true);
        public static final UniqueKey<MessageRecord> MESSAGE_PKEY = Internal.createUniqueKey(Message.MESSAGE, "message_pkey", new TableField[] { Message.MESSAGE.ID }, true);
        public static final UniqueKey<MessageRecipientRecord> RECIPIENT_PKEY = Internal.createUniqueKey(MessageRecipient.MESSAGE_RECIPIENT, "recipient_pkey", new TableField[] { MessageRecipient.MESSAGE_RECIPIENT.ID }, true);
        public static final UniqueKey<MessageSettingRecord> MESSAGE_SETTING_PKEY = Internal.createUniqueKey(MessageSetting.MESSAGE_SETTING, "message_setting_pkey", new TableField[] { MessageSetting.MESSAGE_SETTING.ID }, true);
        public static final UniqueKey<TenantRecord> TENANT_PKEY = Internal.createUniqueKey(Tenant.TENANT, "tenant_pkey", new TableField[] { Tenant.TENANT.CODE }, true);
        public static final UniqueKey<UserSettingRecord> USER_SETTING_PKEY = Internal.createUniqueKey(UserSetting.USER_SETTING, "user_setting_pkey", new TableField[] { UserSetting.USER_SETTING.ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<ChannelRecord, TenantRecord> CHANNEL__CHANNEL_TENANT_CODE_FKEY = Internal.createForeignKey(Keys.TENANT_PKEY, Channel.CHANNEL, "channel_tenant_code_fkey", new TableField[] { Channel.CHANNEL.TENANT_CODE }, true);
        public static final ForeignKey<MessageRecord, TenantRecord> MESSAGE__MESSAGE_TENANT_CODE_FKEY = Internal.createForeignKey(Keys.TENANT_PKEY, Message.MESSAGE, "message_tenant_code_fkey", new TableField[] { Message.MESSAGE.TENANT_CODE }, true);
        public static final ForeignKey<MessageRecord, ChannelRecord> MESSAGE__MESSAGE_CHANNEL_ID_CHANNEL_ID_FK = Internal.createForeignKey(Keys.CHANNEL_PKEY, Message.MESSAGE, "message_channel_id_channel_id_fk", new TableField[] { Message.MESSAGE.CHANNEL_ID }, true);
        public static final ForeignKey<MessageRecipientRecord, MessageRecord> MESSAGE_RECIPIENT__RECIPIENT_MESSAGE_ID_FKEY = Internal.createForeignKey(Keys.MESSAGE_PKEY, MessageRecipient.MESSAGE_RECIPIENT, "recipient_message_id_fkey", new TableField[] { MessageRecipient.MESSAGE_RECIPIENT.MESSAGE_ID }, true);
        public static final ForeignKey<MessageSettingRecord, ChannelRecord> MESSAGE_SETTING__MESSAGE_SETTING_CHANNEL_ID_CHANNEL_ID_FK = Internal.createForeignKey(Keys.CHANNEL_PKEY, MessageSetting.MESSAGE_SETTING, "message_setting_channel_id_channel_id_fk", new TableField[] { MessageSetting.MESSAGE_SETTING.CHANNEL_ID }, true);
        public static final ForeignKey<MessageSettingRecord, TenantRecord> MESSAGE_SETTING__MESSAGE_SETTING_TENANT_CODE_FKEY = Internal.createForeignKey(Keys.TENANT_PKEY, MessageSetting.MESSAGE_SETTING, "message_setting_tenant_code_fkey", new TableField[] { MessageSetting.MESSAGE_SETTING.TENANT_CODE }, true);
        public static final ForeignKey<UserSettingRecord, MessageSettingRecord> USER_SETTING__USER_SETTING_MSG_SETTINGS_ID_MESSAGE_SETTING_ID_FK = Internal.createForeignKey(Keys.MESSAGE_SETTING_PKEY, UserSetting.USER_SETTING, "user_setting_msg_settings_id_message_setting_id_fk", new TableField[] { UserSetting.USER_SETTING.MSG_SETTING_ID }, true);
        public static final ForeignKey<UserSettingRecord, ChannelRecord> USER_SETTING__USER_SETTING_CHANNEL_ID_CHANNEL_ID_FK = Internal.createForeignKey(Keys.CHANNEL_PKEY, UserSetting.USER_SETTING, "user_setting_channel_id_channel_id_fk", new TableField[] { UserSetting.USER_SETTING.CHANNEL_ID }, true);
        public static final ForeignKey<UserSettingRecord, TenantRecord> USER_SETTING__USER_SETTING_TENANT_CODE_FKEY = Internal.createForeignKey(Keys.TENANT_PKEY, UserSetting.USER_SETTING, "user_setting_tenant_code_fkey", new TableField[] { UserSetting.USER_SETTING.TENANT_CODE }, true);
    }
}
