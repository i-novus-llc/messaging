/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import ru.inovus.messaging.api.model.enums.AlertType;
import ru.inovus.messaging.api.model.enums.FormationType;
import ru.inovus.messaging.api.model.enums.RecipientType;
import ru.inovus.messaging.api.model.enums.Severity;
import ru.inovus.messaging.impl.jooq.tables.Message;

import java.time.LocalDateTime;
import java.util.UUID;


/**
 * Уведомления
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record14<UUID, String, String, Severity, AlertType, LocalDateTime, String, Integer, FormationType, RecipientType, String, String, String, String> {

    private static final long serialVersionUID = -1484615168;

    /**
     * Setter for <code>messaging.message.id</code>. Уникальный идентификатор
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>messaging.message.id</code>. Уникальный идентификатор
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>messaging.message.caption</code>. Заголовок уведомления
     */
    public void setCaption(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>messaging.message.caption</code>. Заголовок уведомления
     */
    public String getCaption() {
        return (String) get(1);
    }

    /**
     * Setter for <code>messaging.message.text</code>. Содержимое уведомления
     */
    public void setText(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>messaging.message.text</code>. Содержимое уведомления
     */
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>messaging.message.severity</code>. Важность уведомления
     */
    public void setSeverity(Severity value) {
        set(3, value);
    }

    /**
     * Getter for <code>messaging.message.severity</code>. Важность уведомления
     */
    public Severity getSeverity() {
        return (Severity) get(3);
    }

    /**
     * Setter for <code>messaging.message.alert_type</code>. Способ отображения уведомления
     */
    public void setAlertType(AlertType value) {
        set(4, value);
    }

    /**
     * Getter for <code>messaging.message.alert_type</code>. Способ отображения уведомления
     */
    public AlertType getAlertType() {
        return (AlertType) get(4);
    }

    /**
     * Setter for <code>messaging.message.sent_at</code>. Дата и время отправки уведомления
     */
    public void setSentAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>messaging.message.sent_at</code>. Дата и время отправки уведомления
     */
    public LocalDateTime getSentAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>messaging.message.system_id</code>. Идентификатор системы, к которой относится уведомление
     */
    public void setSystemId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>messaging.message.system_id</code>. Идентификатор системы, к которой относится уведомление
     */
    public String getSystemId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>messaging.message.component_id</code>. Идентификатор компонента (модуля, подсистемы), к которому относится уведомление
     */
    public void setComponentId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>messaging.message.component_id</code>. Идентификатор компонента (модуля, подсистемы), к которому относится уведомление
     */
    public Integer getComponentId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>messaging.message.formation_type</code>. Тип формирования уведомления
     */
    public void setFormationType(FormationType value) {
        set(8, value);
    }

    /**
     * Getter for <code>messaging.message.formation_type</code>. Тип формирования уведомления
     */
    public FormationType getFormationType() {
        return (FormationType) get(8);
    }

    /**
     * Setter for <code>messaging.message.recipient_type</code>. Тип получателя уведомления
     */
    public void setRecipientType(RecipientType value) {
        set(9, value);
    }

    /**
     * Getter for <code>messaging.message.recipient_type</code>. Тип получателя уведомления
     */
    public RecipientType getRecipientType() {
        return (RecipientType) get(9);
    }

    /**
     * Setter for <code>messaging.message.notification_type</code>. Код шаблона, который был использован для формирования уведомления
     */
    public void setNotificationType(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>messaging.message.notification_type</code>. Код шаблона, который был использован для формирования уведомления
     */
    public String getNotificationType() {
        return (String) get(10);
    }

    /**
     * Setter for <code>messaging.message.object_id</code>. Идентификатор объекта, по которому было направлено уведомление
     */
    public void setObjectId(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>messaging.message.object_id</code>. Идентификатор объекта, по которому было направлено уведомление
     */
    public String getObjectId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>messaging.message.object_type</code>. Тип объекта, по которому было направлено уведомление
     */
    public void setObjectType(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>messaging.message.object_type</code>. Тип объекта, по которому было направлено уведомление
     */
    public String getObjectType() {
        return (String) get(12);
    }

    /**
     * Setter for <code>messaging.message.channel_id</code>. Идентификатор канала отправки уведомления
     */
    public void setChannelId(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>messaging.message.channel_id</code>. Идентификатор канала отправки уведомления
     */
    public String getChannelId() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<UUID, String, String, Severity, AlertType, LocalDateTime, String, Integer, FormationType, RecipientType, String, String, String, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<UUID, String, String, Severity, AlertType, LocalDateTime, String, Integer, FormationType, RecipientType, String, String, String, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return Message.MESSAGE.CAPTION;
    }

    @Override
    public Field<String> field3() {
        return Message.MESSAGE.TEXT;
    }

    @Override
    public Field<Severity> field4() {
        return Message.MESSAGE.SEVERITY;
    }

    @Override
    public Field<AlertType> field5() {
        return Message.MESSAGE.ALERT_TYPE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Message.MESSAGE.SENT_AT;
    }

    @Override
    public Field<String> field7() {
        return Message.MESSAGE.SYSTEM_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Message.MESSAGE.COMPONENT_ID;
    }

    @Override
    public Field<FormationType> field9() {
        return Message.MESSAGE.FORMATION_TYPE;
    }

    @Override
    public Field<RecipientType> field10() {
        return Message.MESSAGE.RECIPIENT_TYPE;
    }

    @Override
    public Field<String> field11() {
        return Message.MESSAGE.NOTIFICATION_TYPE;
    }

    @Override
    public Field<String> field12() {
        return Message.MESSAGE.OBJECT_ID;
    }

    @Override
    public Field<String> field13() {
        return Message.MESSAGE.OBJECT_TYPE;
    }

    @Override
    public Field<String> field14() {
        return Message.MESSAGE.CHANNEL_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCaption();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public Severity component4() {
        return getSeverity();
    }

    @Override
    public AlertType component5() {
        return getAlertType();
    }

    @Override
    public LocalDateTime component6() {
        return getSentAt();
    }

    @Override
    public String component7() {
        return getSystemId();
    }

    @Override
    public Integer component8() {
        return getComponentId();
    }

    @Override
    public FormationType component9() {
        return getFormationType();
    }

    @Override
    public RecipientType component10() {
        return getRecipientType();
    }

    @Override
    public String component11() {
        return getNotificationType();
    }

    @Override
    public String component12() {
        return getObjectId();
    }

    @Override
    public String component13() {
        return getObjectType();
    }

    @Override
    public String component14() {
        return getChannelId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCaption();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public Severity value4() {
        return getSeverity();
    }

    @Override
    public AlertType value5() {
        return getAlertType();
    }

    @Override
    public LocalDateTime value6() {
        return getSentAt();
    }

    @Override
    public String value7() {
        return getSystemId();
    }

    @Override
    public Integer value8() {
        return getComponentId();
    }

    @Override
    public FormationType value9() {
        return getFormationType();
    }

    @Override
    public RecipientType value10() {
        return getRecipientType();
    }

    @Override
    public String value11() {
        return getNotificationType();
    }

    @Override
    public String value12() {
        return getObjectId();
    }

    @Override
    public String value13() {
        return getObjectType();
    }

    @Override
    public String value14() {
        return getChannelId();
    }

    @Override
    public MessageRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(String value) {
        setCaption(value);
        return this;
    }

    @Override
    public MessageRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public MessageRecord value4(Severity value) {
        setSeverity(value);
        return this;
    }

    @Override
    public MessageRecord value5(AlertType value) {
        setAlertType(value);
        return this;
    }

    @Override
    public MessageRecord value6(LocalDateTime value) {
        setSentAt(value);
        return this;
    }

    @Override
    public MessageRecord value7(String value) {
        setSystemId(value);
        return this;
    }

    @Override
    public MessageRecord value8(Integer value) {
        setComponentId(value);
        return this;
    }

    @Override
    public MessageRecord value9(FormationType value) {
        setFormationType(value);
        return this;
    }

    @Override
    public MessageRecord value10(RecipientType value) {
        setRecipientType(value);
        return this;
    }

    @Override
    public MessageRecord value11(String value) {
        setNotificationType(value);
        return this;
    }

    @Override
    public MessageRecord value12(String value) {
        setObjectId(value);
        return this;
    }

    @Override
    public MessageRecord value13(String value) {
        setObjectType(value);
        return this;
    }

    @Override
    public MessageRecord value14(String value) {
        setChannelId(value);
        return this;
    }

    @Override
    public MessageRecord values(UUID value1, String value2, String value3, Severity value4, AlertType value5, LocalDateTime value6, String value7, Integer value8, FormationType value9, RecipientType value10, String value11, String value12, String value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(UUID id, String caption, String text, Severity severity, AlertType alertType, LocalDateTime sentAt, String systemId, Integer componentId, FormationType formationType, RecipientType recipientType, String notificationType, String objectId, String objectType, String channelId) {
        super(Message.MESSAGE);

        set(0, id);
        set(1, caption);
        set(2, text);
        set(3, severity);
        set(4, alertType);
        set(5, sentAt);
        set(6, systemId);
        set(7, componentId);
        set(8, formationType);
        set(9, recipientType);
        set(10, notificationType);
        set(11, objectId);
        set(12, objectType);
        set(13, channelId);
    }
}
