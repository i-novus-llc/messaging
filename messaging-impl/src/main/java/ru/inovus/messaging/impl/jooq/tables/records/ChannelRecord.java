/*
 * This file is generated by jOOQ.
 */
package ru.inovus.messaging.impl.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.inovus.messaging.impl.jooq.tables.Channel;


/**
 * Каналы отправки уведомлений
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChannelRecord extends UpdatableRecordImpl<ChannelRecord> implements Record6<String, String, String, Boolean, String, Integer> {

    private static final long serialVersionUID = -1732246950;

    /**
     * Setter for <code>messaging.channel.code</code>. Уникальный идентификатор
     */
    public void setCode(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>messaging.channel.code</code>. Уникальный идентификатор
     */
    public String getCode() {
        return (String) get(0);
    }

    /**
     * Setter for <code>messaging.channel.name</code>. Наименование канала
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>messaging.channel.name</code>. Наименование канала
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>messaging.channel.queue_name</code>. Наименование очереди канала
     */
    public void setQueueName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>messaging.channel.queue_name</code>. Наименование очереди канала
     */
    public String getQueueName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>messaging.channel.is_internal</code>. Признак внутрисистемного канала отправки
     */
    public void setIsInternal(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>messaging.channel.is_internal</code>. Признак внутрисистемного канала отправки
     */
    public Boolean getIsInternal() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>messaging.channel.tenant_code</code>. Тенант, к которому относится канал отправки
     */
    public void setTenantCode(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>messaging.channel.tenant_code</code>. Тенант, к которому относится канал отправки
     */
    public String getTenantCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>messaging.channel.id</code>.
     */
    public void setId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>messaging.channel.id</code>.
     */
    public Integer getId() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, Boolean, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<String, String, String, Boolean, String, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Channel.CHANNEL.CODE;
    }

    @Override
    public Field<String> field2() {
        return Channel.CHANNEL.NAME;
    }

    @Override
    public Field<String> field3() {
        return Channel.CHANNEL.QUEUE_NAME;
    }

    @Override
    public Field<Boolean> field4() {
        return Channel.CHANNEL.IS_INTERNAL;
    }

    @Override
    public Field<String> field5() {
        return Channel.CHANNEL.TENANT_CODE;
    }

    @Override
    public Field<Integer> field6() {
        return Channel.CHANNEL.ID;
    }

    @Override
    public String component1() {
        return getCode();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getQueueName();
    }

    @Override
    public Boolean component4() {
        return getIsInternal();
    }

    @Override
    public String component5() {
        return getTenantCode();
    }

    @Override
    public Integer component6() {
        return getId();
    }

    @Override
    public String value1() {
        return getCode();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getQueueName();
    }

    @Override
    public Boolean value4() {
        return getIsInternal();
    }

    @Override
    public String value5() {
        return getTenantCode();
    }

    @Override
    public Integer value6() {
        return getId();
    }

    @Override
    public ChannelRecord value1(String value) {
        setCode(value);
        return this;
    }

    @Override
    public ChannelRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public ChannelRecord value3(String value) {
        setQueueName(value);
        return this;
    }

    @Override
    public ChannelRecord value4(Boolean value) {
        setIsInternal(value);
        return this;
    }

    @Override
    public ChannelRecord value5(String value) {
        setTenantCode(value);
        return this;
    }

    @Override
    public ChannelRecord value6(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ChannelRecord values(String value1, String value2, String value3, Boolean value4, String value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChannelRecord
     */
    public ChannelRecord() {
        super(Channel.CHANNEL);
    }

    /**
     * Create a detached, initialised ChannelRecord
     */
    public ChannelRecord(String code, String name, String queueName, Boolean isInternal, String tenantCode, Integer id) {
        super(Channel.CHANNEL);

        set(0, code);
        set(1, name);
        set(2, queueName);
        set(3, isInternal);
        set(4, tenantCode);
        set(5, id);
    }
}
