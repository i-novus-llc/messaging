version: "3.6"
services:
  db:
    image: postgres:9.6.11-alpine
    volumes:
      - messaging-db-data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432"
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '0.5'
      restart_policy:
        max_attempts: 3
      placement:
        constraints:
          - node.labels.type == db

  messaging-backend:
    environment:
      SPRING_CLOUD_CONSUL_CONFIG_PREFIX: messaging
      SPRING_CLOUD_CONSUL_CONFIG_FORMAT: YAML
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/postgres
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_USER_NAME_ATTRIBUTE: preferred_username
      SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
      NOVUS_MESSAGING_RECIPIENT_PROVIDER_URL: http://yandex.develop:8278/api
      NOVUS_MESSAGING_RECIPIENT_PROVIDER_TYPE: security
      SPRING_KAFKA_BOOTSTRAP_SERVERS: http://kafka:9092
      SPRING_MAIL_USERNAME: someuser
      SPRING_MAIL_HOST: maildev.i-novus.ru
      JAVA_OPTS: -Xmx200m
      SERVER_PORT: 8080
      SPRING_REDIS_HOST: redis
    depends_on:
      - redis
      - db
    ports:
      - "8112:8080"
    deploy:
      resources:
        limits:
          memory: 500M
          cpus: '0.5'
      restart_policy:
        max_attempts: 3

  messaging-frontend:
    environment:
      SPRING_CLOUD_CONSUL_CONFIG_PREFIX: messaging
      SPRING_CLOUD_CONSUL_CONFIG_FORMAT: YAML
      SERVER_TOMCAT_ACCESSLOG_ENABLED: "true"
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ADMIN_WEB_CLIENT_ID: localhost
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_ADMIN_WEB_CLIENT_SECRET: 494f2352-b552-4888-82fa-e2087beafd0d
      ACCESS_SERVICE_URL: http://yandex.develop:8278/api
      ACCESS_KEYCLOAK_SERVER_URL: https://keycloak.i-novus.ru/auth
      MESSAGING_BACKEND_PATH: http://messaging-backend:8080/api
      N2O_CONFIG_WS_ENDPOINT: http://messaging-backend:8080/ws
      SPRING_REDIS_HOST: redis
      JAVA_OPTS: -Xmx200m
    depends_on:
      - messaging-backend
      - redis
    ports:
      - "8111:8080"
    deploy:
      resources:
        limits:
          memory: 600M
          cpus: '0.5'
      restart_policy:
        max_attempts: 3

  react:
    ports:
      - "8110:80"
    deploy:
      resources:
        limits:
          memory: 200M
          cpus: '0.5'
      restart_policy:
        max_attempts: 3
    depends_on:
      - messaging-frontend

  zookeeper:
    image: 'bitnami/zookeeper:3.7.0'
    ports:
      - '8113:2181'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.75'
      restart_policy:
        max_attempts: 3
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: 'bitnami/kafka:2.8.1'
    ports:
      - '8114:9092'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.75'
      restart_policy:
        max_attempts: 3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  redis:
    image: 'redis:7.0.11-alpine'
    ports:
      - '8115:6379'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.75'
      restart_policy:
        max_attempts: 3

volumes:
  messaging-db-data:
